#dp
#bfs랑 혼동하지 않게 주의->기존 정보로 해결 가능한지로 판단,bfs는 불가

#아이디어 
#1로 만드는 걸 1을 n으로 바꾸는 것으로 생각->거꾸로 생각하기@
#dp[i]=min(dp[i-1]+1,dp[i//2]+1,dp[i//3]+1) i가 2,3의 배수일 때
#각 수까지 도달하는 최소 연산을 dp에 저장,그걸 토대로 다음 값 만듦

n=int(input())

#dp테이블 초기화
dp=[0]*(n+1)
dp[1]=0

#2부터 n까지 살펴보며
for i in range(2,n+1):
  #dp[i]=min(dp[i-1]+1,dp[i//2]+1,dp[i//3]+1) i가 2,3의 배수일 때
  #dp테이블을 최소 연산 값으로 갱신
  dp[i]=dp[i-1]+1      #그냥 더할 때
  #2를 곱할 때,2로 나눈 값의 연산+1
  if i%2==0:
    dp[i]=min(dp[i],dp[i//2]+1)
  #3을 곱할 때,3으로 나눈 값의 연산+1
  if i%3==0:
    dp[i]=min(dp[i],dp[i//3]+1)

print(dp[n])